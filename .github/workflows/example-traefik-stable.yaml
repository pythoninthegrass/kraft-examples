name: examples/traefik (stable)

on:
  workflow_dispatch:

  push:
    branches: [main]
    paths:
    - '.github/workflows/example-traefik-stable.yaml'
    - 'traefik/**'
    - '!traefik/README.md'

  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths:
    - '.github/workflows/example-traefik-stable.yaml'
    - 'traefik/**'
    - '!traefik/README.md'

  schedule:
  - cron: '0 17 * * 1-5'

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  UKC_METRO: ${{ vars.UKC_METRO }}
  UKC_TOKEN: ${{ secrets.UKC_TOKEN }}
  KRAFTKIT_NO_CHECK_UPDATES: true
  KRAFTKIT_LOG_LEVEL: debug

jobs:
  integration:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Test
      id: test
      uses: unikraft/kraftkit@staging
      continue-on-error: true
      with:
        run: |
          set -xe;

          cd traefik;

          kraft cloud deploy \
            --no-start \
            --memory 512 \
            --name traefik-${GITHUB_RUN_ID} \
            --runtime index.unikraft.io/official-testing/traefik:2.10 \
            --subdomain traefik-${GITHUB_RUN_ID} \
            -p 443:80/tls+http -p 8080:8080/tls \
            .;

          # wait for the instance to start
          kraft cloud vm start -w 5s traefik-${GITHUB_RUN_ID};
          sleep 5;

          curl -Lv --fail-with-body --max-time 10 https://traefik-${GITHUB_RUN_ID}.${UKC_METRO}.kraft.host:8080/dashboard/

    - name: Cleanup
      uses: unikraft/kraftkit@staging
      if: always()
      with:
        run: |
          set -xe;

          kraft cloud vm stop traefik-${GITHUB_RUN_ID} || true;
          kraft cloud vm logs traefik-${GITHUB_RUN_ID} || true;
          kraft cloud vm rm traefik-${GITHUB_RUN_ID} || true;
          kraft cloud img rm index.unikraft.io/test/traefik-${GITHUB_RUN_ID} || true;

    - name: Re-test with debug info
      id: re-test
      if: ${{ success() && steps.test.outcome == 'failure' }}
      uses: unikraft/kraftkit@staging
      with:
        run: |
          set -xe;

          cd traefik;

          kraft cloud deploy \
            --no-start \
            --memory 512 \
            --name traefik-${GITHUB_RUN_ID}-dbg \
            --runtime index.unikraft.io/official-testing/traefik:2.10-dbg \
            --subdomain traefik-${GITHUB_RUN_ID}-dbg \
            -p 443:80/tls+http -p 8080:8080/tls \
            .;

          # wait for the instance to start
          kraft cloud vm start -w 5s traefik-${GITHUB_RUN_ID}-dbg;
          sleep 5;

          curl -Lv --fail-with-body --max-time 10 https://traefik-${GITHUB_RUN_ID}-dbg.${UKC_METRO}.kraft.host:8080/dashboard/

    - name: Cleanup Debug
      uses: unikraft/kraftkit@staging
      if: always()
      with:
        run: |
          set -xe;

          kraft cloud vm stop traefik-${GITHUB_RUN_ID}-dbg || true;
          kraft cloud vm logs traefik-${GITHUB_RUN_ID}-dbg || true;
          kraft cloud vm rm traefik-${GITHUB_RUN_ID}-dbg || true;
          kraft cloud img rm index.unikraft.io/test/traefik-${GITHUB_RUN_ID}-dbg || true;
