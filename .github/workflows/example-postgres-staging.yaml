name: examples/postgres (staging)

on:
    workflow_dispatch:

    push:
      branches: [main]
      paths:
      - '.github/workflows/example-postgres-staging.yaml'
      - 'postgres/**'
      - '!postgres/README.md'

    pull_request:
      types: [opened, synchronize, reopened]
      branches: [main]
      paths:
      - '.github/workflows/example-postgres-staging.yaml'
      - 'postgres/**'
      - '!postgres/README.md'

    schedule:
      - cron: '45 16 * * 1-5'

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  UKC_METRO: ${{ vars.UKC_METRO }}
  UKC_TOKEN: ${{ secrets.UKC_TOKEN }}
  KRAFTKIT_NO_CHECK_UPDATES: true
  KRAFTKIT_LOG_LEVEL: debug

jobs:
  integration:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Test
      id: test
      uses: unikraft/kraftkit@staging
      with:
        run: |
          set -xe;

          sudo apt-get -y update
          sudo apt-get install -y --no-install-recommends postgresql-client

          cd postgres;

          kraft cloud deploy \
            --no-start \
            --memory 1024 \
            --name postgres-${GITHUB_RUN_ID} \
            --env POSTGRES_PASSWORD=unikraft \
            --runtime index.unikraft.io/official-staging/base-compat:latest \
            --subdomain postgres-${GITHUB_RUN_ID} \
            -p 5432:5432/tls \
            .;

          # wait for the instance to start
          kraft cloud vm start -w 5s postgres-${GITHUB_RUN_ID};
          sleep 10;

          echo "SELECT 1;" | psql "postgresql://postgres:unikraft@postgres-${GITHUB_RUN_ID}.${UKC_METRO}.kraft.host:5432/postgres?sslmode=require"

    - name: Cleanup
      uses: unikraft/kraftkit@staging
      if: always()
      with:
        run: |
          set -xe;

          kraft cloud vm stop postgres-${GITHUB_RUN_ID} || true;
          kraft cloud vm logs postgres-${GITHUB_RUN_ID} || true;
          kraft cloud vm rm postgres-${GITHUB_RUN_ID} || true;
          kraft cloud img rm index.unikraft.io/test/postgres-${GITHUB_RUN_ID} || true;

    - name: Test
      id: re-test
      if: ${{ success() && steps.test.outcome == 'failure' }}
      uses: unikraft/kraftkit@staging
      with:
        run: |
          set -xe;

          sudo apt-get -y update
          sudo apt-get install -y --no-install-recommends postgresql-client

          cd postgres;

          kraft cloud deploy \
          --no-start \
          --memory 1024 \
          --name postgres-${GITHUB_RUN_ID}-dbg \
          --env POSTGRES_PASSWORD=unikraft \
          --runtime index.unikraft.io/official-staging/base-compat:latest-dbg \
          --subdomain postgres-${GITHUB_RUN_ID}-dbg \
          -p 5432:5432/tls \
          .;

          # wait for the instance to start
          kraft cloud vm start -w 5s postgres-${GITHUB_RUN_ID}-dbg;
          sleep 10;

          echo "SELECT 1;" | psql "postgresql://postgres:unikraft@postgres-${GITHUB_RUN_ID}-dbg.${UKC_METRO}.kraft.host:5432/postgres?sslmode=require"

    - name: Cleanup Debug
      uses: unikraft/kraftkit@staging
      if: always()
      with:
        run: |
          set -xe;

          kraft cloud vm stop postgres-${GITHUB_RUN_ID}-dbg || true;
          kraft cloud vm logs postgres-${GITHUB_RUN_ID}-dbg || true;
          kraft cloud vm rm postgres-${GITHUB_RUN_ID}-dbg || true;
          kraft cloud img rm index.unikraft.io/test/postgres-${GITHUB_RUN_ID}-dbg || true;
