diff --git a/src/backend/main/main.c b/src/backend/main/main.c
--- a/src/backend/main/main.c
+++ b/src/backend/main/main.c
@@ -174,8 +174,8 @@ main(int argc, char *argv[])
 	 * Make sure we are not running as root, unless it's safe for the selected
 	 * option.
 	 */
-	if (do_check_root)
-		check_root(progname);
+	//if (do_check_root)
+	//	check_root(progname);
 
 	/*
 	 * Dispatch to one of various subprograms depending on first argument.
diff --git a/src/bin/initdb/initdb.c b/src/bin/initdb/initdb.c
--- a/src/bin/initdb/initdb.c
+++ b/src/bin/initdb/initdb.c
@@ -755,12 +755,12 @@ get_id(void)
 	const char *username;
 
 #ifndef WIN32
-	if (geteuid() == 0)			/* 0 is root's uid */
-	{
-		pg_log_error("cannot be run as root");
-		pg_log_error_hint("Please log in (using, e.g., \"su\") as the (unprivileged) user that will own the server process.");
-		exit(1);
-	}
+	//if (geteuid() == 0)			/* 0 is root's uid */
+	//{
+	//	pg_log_error("cannot be run as root");
+	//	pg_log_error_hint("Please log in (using, e.g., \"su\") as the (unprivileged) user that will own the server process.");
+	//	exit(1);
+	//}
 #endif
 
 	username = get_user_name_or_exit(progname);
diff --git a/src/bin/pg_ctl/pg_ctl.c b/src/bin/pg_ctl/pg_ctl.c
--- a/src/bin/pg_ctl/pg_ctl.c
+++ b/src/bin/pg_ctl/pg_ctl.c
@@ -2245,15 +2245,15 @@ main(int argc, char **argv)
 	 * Disallow running as root, to forestall any possible security holes.
 	 */
 #ifndef WIN32
-	if (geteuid() == 0)
-	{
-		write_stderr(_("%s: cannot be run as root\n"
-					   "Please log in (using, e.g., \"su\") as the "
-					   "(unprivileged) user that will\n"
-					   "own the server process.\n"),
-					 progname);
-		exit(1);
-	}
+	//if (geteuid() == 0)
+	//{
+	//	write_stderr(_("%s: cannot be run as root\n"
+	//				   "Please log in (using, e.g., \"su\") as the "
+	//				   "(unprivileged) user that will\n"
+	//				   "own the server process.\n"),
+	//				 progname);
+	//	exit(1);
+	//}
 #endif
 
 	env_wait = getenv("PGCTLTIMEOUT");
diff --git a/src/bin/pg_resetwal/pg_resetwal.c b/src/bin/pg_resetwal/pg_resetwal.c
--- a/src/bin/pg_resetwal/pg_resetwal.c
+++ b/src/bin/pg_resetwal/pg_resetwal.c
@@ -331,13 +331,13 @@ main(int argc, char *argv[])
 	 * the data directory.
 	 */
 #ifndef WIN32
-	if (geteuid() == 0)
-	{
-		pg_log_error("cannot be executed by \"root\"");
-		pg_log_error_hint("You must run %s as the PostgreSQL superuser.",
-						  progname);
-		exit(1);
-	}
+	//if (geteuid() == 0)
+	//{
+	//	pg_log_error("cannot be executed by \"root\"");
+	//	pg_log_error_hint("You must run %s as the PostgreSQL superuser.",
+	//					  progname);
+	//	exit(1);
+	//}
 #endif
 
 	get_restricted_token();
diff --git a/src/bin/pg_rewind/pg_rewind.c b/src/bin/pg_rewind/pg_rewind.c
--- a/src/bin/pg_rewind/pg_rewind.c
+++ b/src/bin/pg_rewind/pg_rewind.c
@@ -268,13 +268,13 @@ main(int argc, char **argv)
 	 * the data directory.
 	 */
 #ifndef WIN32
-	if (geteuid() == 0)
-	{
-		pg_log_error("cannot be executed by \"root\"");
-		pg_log_error_hint("You must run %s as the PostgreSQL superuser.",
-						  progname);
-		exit(1);
-	}
+	//if (geteuid() == 0)
+	//{
+	//	pg_log_error("cannot be executed by \"root\"");
+	//	pg_log_error_hint("You must run %s as the PostgreSQL superuser.",
+	//					  progname);
+	//	exit(1);
+	//}
 #endif
 
 	get_restricted_token();
